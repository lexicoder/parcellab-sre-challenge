name: Build, test and release app

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  packages: write
  id-token: write
  security-events: write

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:
  test-and-release:
    name: Run tests and release artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'src/go.mod'

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          skip-pkg-cache: true  # Due to "Cannot open: File exists error" in action output https://github.com/golangci/golangci-lint-action/issues/807

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...

      - name: Run tests
        run: |
          cd src
          go test -v ./...

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}
          tags: |
            type=ref,event=branch
            type=sha,format=short,prefix=
            type=raw,value=latest
            type=raw,value=0.1.${{ github.run_number }}

      - name: Build docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: src/
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Set chart and app version
        run: |
          sed -i 's/version: 0.1.0/version: 0.1.'$GITHUB_RUN_NUMBER'/g' charts/*/Chart.yaml
          sed -i 's/appVersion: "latest"/appVersion: \"0.1.'$GITHUB_RUN_NUMBER'\"/g' charts/*/Chart.yaml

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Create kind cluster
        uses: helm/kind-action@v1.8.0

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1
          
      - name: Load docker image into kind cluster
        run: kind load docker-image ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}:0.1.${{ github.run_number }} --name chart-testing

      - name: Run helm lint (lint)
        run: helm lint charts/*

      - name: Run chart-testing (lint)
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Run chart-testing (install)
        run: ct install --all
      
      - name: Login to github container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push docker image
        id: push
        uses: docker/build-push-action@v5
        if: github.ref == /refs/head/${{ github.event.repository.default_branch }} && github.event_name == 'push'
        with:
          context: src/
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.4.0
      
      - name: Sign the published Docker image
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
          TAGS: ${{ steps.docker_meta.outputs.tags }}
        if: github.ref == /refs/head/${{ github.event.repository.default_branch }} && github.event_name == 'push'
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}

      - name: Configure Git
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        if: github.ref == /refs/head/${{ github.event.repository.default_branch }} && github.event_name == 'push'
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        if: github.ref == /refs/head/${{ github.event.repository.default_branch }} && github.event_name == 'push'
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}:0.1.${{ github.run_number }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: github.ref == /refs/head/${{ github.event.repository.default_branch }} && github.event_name == 'push'
        with:
          sarif_file: 'trivy-results.sarif'

  deploy:
    strategy:
      matrix:
        stage: [customer-a, customer-b, customer-c]
    uses: ./.github/workflows/deploy.yaml
    needs: [test-and-release]
    if: github.ref == /refs/head/${{ github.event.repository.default_branch }} && github.event_name == 'push'
    with:
      environment: ${{ matrix.stage }}
